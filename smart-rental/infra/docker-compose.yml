services:
  postgres:
    image: timescale/timescaledb-postgis:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: smart_rental
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  emqx:
    image: emqx/emqx:latest
    ports:
      - "1883:1883"
      - "8083:8083"
      - "8883:8883"
      - "18083:18083"

  api:
    build:
      context: ../apps/api
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/smart_rental
      REDIS_URL: redis://redis:6379
      S3_ENDPOINT: http://minio:9000
      S3_REGION: auto
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin
      S3_BUCKET: smart-rental-media
      JWT_SECRET: devjwt
      NEXTAUTH_SECRET: devsecret
      ML_BASE_URL: http://ml:8000

  workers:
    build:
      context: ../apps/workers
    depends_on:
      - redis
      - postgres

  ml:
    build:
      context: ../apps/ml
    ports:
      - "8000:8000"

  web:
    build:
      context: ../apps/web
    ports:
      - "3001:3000"
    environment:
      NEXT_PUBLIC_MAP_STYLE: https://demotiles.maplibre.org/style.json
      NEXT_PUBLIC_WS_URL: ws://api:3000

volumes:
  postgres_data:
  redis_data:
  minio_data:
